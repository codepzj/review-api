syntax = "proto3";

package api.review.v1;

option go_package = "review-service/api/review/v1;v1";
option java_multiple_files = true;
option java_package = "api.review.v1";
import "google/api/annotations.proto";
import "validate/validate.proto";

service Review {
	rpc CreateReview (CreateReviewRequest) returns (CreateReviewReply){
		option (google.api.http) = {
			post: "/review-service/v1/create",
			body: "*"
		};
	};
	rpc UpdateReview (UpdateReviewRequest) returns (UpdateReviewReply);
	rpc DeleteReview (DeleteReviewRequest) returns (DeleteReviewReply);
	rpc GetReview (GetReviewRequest) returns (GetReviewReply);
	rpc ListReview (ListReviewRequest) returns (ListReviewReply);
}

message CreateReviewRequest {
	int64 user_id = 1; 
	int64 order_id = 2; 
	string content = 3 [(validate.rules).string.min_len = 10];
	string pic_info = 4 [(validate.rules).string.pattern = "^(http|https)://.+$"]; // 图片
	string video_info = 5 [(validate.rules).string.pattern = "^(http|https)://.+$"]; // 视频
	int32 score = 6 [(validate.rules).int32 = {gt: 0, lte: 5}]; // 1-5 星
	int32 service_score = 7 [(validate.rules).int32 = {gt: 0, lte: 5}];
	int32 express_score = 8 [(validate.rules).int32 = {gt: 0, lte: 5}];
	int32 anonymous = 9 [(validate.rules).int32 = {gte: 0, lte: 1}]; // 是否匿名
}
message CreateReviewReply {
	int64 review_id = 1;
}

message UpdateReviewRequest {}
message UpdateReviewReply {}

message DeleteReviewRequest {}
message DeleteReviewReply {}

message GetReviewRequest {}
message GetReviewReply {}

message ListReviewRequest {}
message ListReviewReply {}